name: Deploy Staging
on:
  push:
    branches:
      - "staging"
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Ruby 2.6
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '2.6'
      - uses: actions/cache@v4
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-
      - name: Install
        run: |
          cp .env.travis .env
          gem install bundler -v 2.4.22
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
      - name: Test
        run: |
          bundle exec rspec

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: rorcommunity/ror-reconciler:staging
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

  deploy:
    needs: [test, build]
    runs-on: ubuntu-latest
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Extract variables
        shell: bash
        run: |
          echo "::set-output name=BRANCH::$(echo ${GITHUB_REF#refs/heads/} | sed 's/\//_/g')"
          echo "::set-output name=TAG::$(git tag --points-at HEAD)"
          echo "::set-output name=GIT_SHA::$(git rev-parse HEAD)"
          echo "::set-output name=GIT_SHA_SHORT::$(git rev-parse --short HEAD)"
        id: extract_variables

      - name: Checkout terraform config repo
        uses: actions/checkout@v4
        with:
          # public repo with terraform configuration
          repository: 'ror-community/new-deployment'
          persist-credentials: false
      - name: Commit changes to terraform config repository
        # use go template in terraform config repository to update git sha and tag
        # commit and push changes to trigger terraform workflow
        run: |
          export GIT_SHA=${{ steps.extract_variables.outputs.GIT_SHA_SHORT }}
          export GIT_TAG=${{ steps.extract_variables.outputs.GIT_TAG }}
          wget https://github.com/jwilder/dockerize/releases/download/v0.6.0/dockerize-linux-amd64-v0.6.0.tar.gz
          tar -xzvf dockerize-linux-amd64-v0.6.0.tar.gz
          rm dockerize-linux-amd64-v0.6.0.tar.gz
          ./dockerize -template ror/services/reconcile/_ror-reconcile-staging.auto.tfvars.tmpl:ror/services/reconcile/_ror-reconcile-staging.auto.tfvars
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add ror/services/reconcile/_ror-reconcile-staging.auto.tfvars
          git commit -m "Adding ror-reconciler git variables for commit ${{ steps.extract_variables.outputs.GIT_SHA }}"
      - name: Push changes
        uses: ad-m/github-push-action@v0.6.0
        with:
          github_token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          repository: 'ror-community/new-deployment'
          branch: 'refs/heads/master'
          tags: false

      - name: Notify Slack
        uses: edge/simple-slack-notify@master
        with:
          channel: '#deployment-updates'
          color: 'good'
          text: 'A new version of the <https://reconcile.staging.ror.org|Reconciler> is deployed to staging.'
          failure_text: '${env.GITHUB_WORKFLOW} (${env.GITHUB_RUN_NUMBER}) build and deploy to staging failed'
